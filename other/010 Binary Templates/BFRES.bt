//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: BFRES.bt
//   Authors: Syroot
//   Version: 1.1.0
//   Purpose: Parse NintendoWare for Cafe (NW4F) graphics archive files (minimum version 3.0.0.0).
//  Category: Wii U
// File Mask: *.bfres
//  ID Bytes: 46 52 45 53 //FRES
//   History: 
// 	1.1.0	2017-05-29	Add experimental BFSHA support for external files.
// 	1.0.0	2017-05-29	Complete FSHU, FVIS, FSHA and FSCN support.
// 	0.7.0	2017-05-28	Complete FTXP support.
// 	0.6.0	2017-05-28	Meaningful names for most structures and fields, countless layout fixes.
// 	0.5.1	2017-05-26	Better handling of optional structures and very compact BFRES headers.
// 	0.5.0	2017-05-23	Parse FSKA and FVIS (partly) section. Separated template into multiple files.
// 	0.4.0	2017-05-23	Parse FTXP section, add stubs for other sections.
// 	0.3.0	2017-05-22	Parse remaining FMDL sections and the FTEX section.
// 	0.1.0	2017-05-21	Initial version, read FMDL (FVTX and FMAT) and embedded files.
//
// For simplicity, all structures are forward declared first, then the definitions imported from files.
// Since BFRES offsets are relative to themselves, Offset and NameOffset structures simplify seeking to their target.
// Dict entries can be read by passing the corresponding DictType to the Dict structure upon declaration.
// It is required to seek back to header ends for structures read in an array at a higher level.
// The color key used for highlighting (groups of) structures is available at:
// 	https://github.com/Syroot/NintenTools.MarioKart8/blob/master/other/010 Binary Templates/BFRES_ColorKey.png
//
// More information available at:
// 	http://mk8.tockdom.com/wiki/BFRES_(File_Format)
//------------------------------------------------

// ==== Forward Declarations ===========================================================================================

// ---- Common ----

struct ResFile;
struct Offset; struct NameOffset;
struct Dict; struct DictNode;
enum DictType
{
	DT_NONE,
	DT_USER_DATA, DT_TEXTURE_REF,
	DT_MODEL,
		DT_BONE,
		DT_VERTEX_ATTRIB,
		DT_SHAPE,
		DT_MATERIAL, DT_RENDER_INFO, DT_SAMPLER,
	DT_TEXTURE,
	DT_SKELETAL_ANIM,
	DT_SHADER_PARAM_ANIM,
	DT_TEX_PATTERN_ANIM,
	DT_VISIBILITY_ANIM,
	DT_SHAPE_ANIM,
	DT_SCENE_ANIM, DT_CAMERA_ANIM, DT_LIGHT_ANIM, DT_FOG_ANIM,
	DT_EXTERNAL_FILE,
	DT_SHADING_MODEL,
		DT_SHADER_OPTION, DT_ATTRIB_VAR, DT_SAMPLER_VAR, DT_UNIFORM_BLOCK_VAR
};
struct TextureRef;
struct AnimCurve; struct AnimCurveKey; struct BaseValue;
struct UserData;

// ---- Section Specific ----

struct Model; struct Buffer;
	struct Skeleton; struct Bone;
	struct Vertex; struct VertexAttrib; 
	struct Shape; struct Mesh; struct SubMesh; struct KeyShape; struct VisibilityNode; struct Bounding;
	struct Material; struct RenderInfo; struct RenderState; struct Sampler; struct ShaderParam; struct ShaderAssign;
struct Texture;
struct SkeletalAnim; struct BoneAnim;
struct ShaderParamAnim; struct ShaderParamMatAnim; struct ParamAnimInfo; struct AnimConstant;
struct TexPatternAnim; struct TexPatternMatAnim; struct PatAnimInfo;
struct VisibilityAnim;
struct ShapeAnim; struct VertexShapeAnim; struct KeyShapeAnimInfo;
struct SceneAnim;
	struct CameraAnim; struct CameraAnimResult;
	struct LightAnim; struct LightAnimResult;
	struct FogAnim; struct FogAnimResult;
struct ExternalFile;

struct ShaderArchive; struct ShadingModel;
	struct ShaderOption; struct AttribVar; struct SamplerVar; struct UniformBlockVar; struct UniformVar;
	struct ShaderProgram; struct OfflineShader;
	struct GLShaderInfo; struct GLShaderInfoSharedSource;

// ==== Includes =======================================================================================================

#include "Math.bt"
#include "BFRES_Common.bt"
#include "BFRES_FMDL.bt"
#include "BFRES_FTEX.bt"
#include "BFRES_FSKA.bt"
#include "BFRES_FSHU.bt"
#include "BFRES_FTXP.bt"
#include "BFRES_FVIS.bt"
#include "BFRES_FSHA.bt"
#include "BFRES_FSCN.bt"
#include "BFRES_External.bt"
#include "BFRES_BFSHA.bt"

// ==== File Contents ==================================================================================================

BigEndian();
ResFile file <open=true>;
